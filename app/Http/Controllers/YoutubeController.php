<?php

/**
 * Growth Engineering Youtube Test
 * OpenAPI declarations for Growth Engineering youtube test
 * PHP version 7.2.5
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@oguzozcan.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/php-laravel/
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Http;
use Illuminate\Contracts\Foundation\Application;
use Illuminate\Contracts\Routing\ResponseFactory;
use Illuminate\Http\Response;
use Illuminate\Support\Facades\Request;

class YoutubeController extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation getPlaylist
     *
     * Get - List Playlist.
     *
     * @param string $playlistId Id of playlist (required)
     *
     * @return Application|ResponseFactory|Response response
     * @throws \Illuminate\Validation\ValidationException
     */
    public function getPlaylist($playlistId)
    {
        $lastVideoId = \request("last_video_id");

        //path params validation
        if (strlen($playlistId) > 36) {
            throw new \InvalidArgumentException('invalid length for $playlistId when calling YoutubeController.getPlaylist, must be smaller than or equal to 36.');
        }

        if (strlen($playlistId) < 16) {
            throw new \InvalidArgumentException('invalid length for $playlistId when calling YoutubeController.getPlaylist, must be bigger than or equal to 16.');
        }

        if (!preg_match("/^[a-zA-Z0-9]+$/", $playlistId)) {
            throw new \InvalidArgumentException('invalid value for $playlistId when calling YoutubeController.getPlaylist, must conform to the pattern /^[a-zA-Z0-9]+$/.');
        }

        $query = [
            "part" => "snippet,contentDetails,status",
            "maxResults" => 20,
            "playlistId" => $playlistId,
            "key" => env("YOUTUBE_API_KEY")
        ];

        if($lastVideoId) {
            $query["pageToken"] = $lastVideoId;
        }

        $res = Http::get(
            "https://www.googleapis.com/youtube/v3/playlistItems",
            $query
        );

        return Response($res->json());
    }
}
